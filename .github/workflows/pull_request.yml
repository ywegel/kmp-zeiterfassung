name: Pull Request

on:
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ktlint:
    name: Ktlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      - name: Run ktlint
        run: ./gradlew ktlintCheck --build-cache --parallel --max-workers=2

      - name: Cache build results
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
            build
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  detekt:
    name: Detekt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      - name: Run detekt
        run: ./gradlew detekt --build-cache --parallel --max-workers=2

      - name: Cache build results
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
            build
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  # TODO: Setup lint to be more aggressive
  lint:
    name: Android Lint
    needs: [ ktlint, detekt ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      - name: Restore cached build results
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Android Lint
        run: ./gradlew lint --build-cache --parallel --max-workers=2

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-report
          path: '**/build/reports/lint-results-*.html'

  unit_tests:
    name: Unit Tests
    needs: [ ktlint, detekt ]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      - name: Restore cached build results
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run unit tests
        run: ./gradlew test --build-cache --parallel --max-workers=2

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report
          path: '**/build/reports/tests/'

      - name: Generate Coverage Report
        run: ./gradlew koverXmlReport

      - name: Post coverage comment
        uses: mi-kas/kover-report@v1
        if: github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: composeApp/build/reports/kover/report.xml
          title: Code Coverage Report
          coverage-counter-type: BRANCH

  assemble_android:
    name: Assemble Android App
    needs: [ lint, unit_tests ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      - name: Restore cached build results
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble Debug APK
        run: ./gradlew assembleDebug --build-cache --parallel --max-workers=2

  assemble_ios:
    name: Assemble IOS App
    needs: [ lint, unit_tests ]
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      - name: Restore cached build results
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer

      - name: iOS debug build
        run: cd iosApp && xcodebuild -scheme iosApp -configuration Debug -destination 'platform=iOS Simulator,OS=latest,name=iPhone 16' CODE_SIGNING_ALLOWED='NO'
